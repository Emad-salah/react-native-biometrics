Object.defineProperty(exports,"__esModule",{value:true});var _this=this;var _reactNative=require("react-native");var ReactNativeBiometrics=_reactNative.NativeModules.ReactNativeBiometrics;exports.default={TouchID:"TouchID",FaceID:"FaceID",getSensorAvailability:function getSensorAvailability(){var sensorAvailable,sensorExists;return regeneratorRuntime.async(function getSensorAvailability$(_context){while(1){switch(_context.prev=_context.next){case 0:sensorAvailable=ReactNativeBiometrics.isSensorAvailable();if(!(_reactNative.Platform.OS==="ios")){_context.next=4;break;}sensorExists=sensorAvailable!=="None";return _context.abrupt("return",{hardwareExists:sensorExists,fingerprintsEnrolled:sensorExists,sensorAvailable:sensorExists});case 4:if(sensorAvailable){_context.next=6;break;}return _context.abrupt("return",{hardwareExists:false,fingerprintsEnrolled:false,sensorAvailable:false});case 6:return _context.abrupt("return",sensorAvailable);case 7:case"end":return _context.stop();}}},null,_this);},setBiometricKeyAlias:function setBiometricKeyAlias(alias){return ReactNativeBiometrics.setBiometricKeyAlias(alias);},getBiometricKeyAlias:function getBiometricKeyAlias(){return ReactNativeBiometrics.getBiometricKeyAlias();},createKeys:function createKeys(promptMessage){return ReactNativeBiometrics.createKeys(promptMessage);},deleteKeys:function deleteKeys(){return ReactNativeBiometrics.deleteKeys();},createSignature:function createSignature(promptMessage,payload){return ReactNativeBiometrics.createSignature(promptMessage,payload);},simplePrompt:function simplePrompt(promptMessage){return ReactNativeBiometrics.simplePrompt(promptMessage);}};